# Rece condition:
  1. When multiple threads access a shared resource
  2. At least one thread is modifying the resource
  3. The timing of threads scheduling may cause incorrect results.
  4. The core of the problem is non atomic operations performed on the shared resource


# Volatile keyword:
Ensures code before volatile variable is executed before and code after, is executed after.
Compiler can rearrange code blocks to optimize if unrelated code is present.

# Deadlock may happen in fine grained locking.
# Best strategy to avoid deadlock is to ensure circular weight doesn't occur by enforcing lock acquisitions follow same order in all threads.