ðŸ”µ LEVEL 4 â€” EXECUTOR FRAMEWORK

Learn to use modern concurrency APIs for thread management.


ðŸ§© Q16 â€“ Fixed Thread Pool

Goal: Manage multiple tasks.
Requirements:

Create ExecutorService with pool size 3.

Submit 5 tasks printing ID + thread name.

Observe reuse of threads.

ðŸ§© Q17 â€“ Callable and Future

Goal: Return values from threads.
Requirements:

Implement Callable<Integer> that returns sum of first N numbers.

Submit multiple tasks and print results.

ðŸ§© Q18 â€“ invokeAll() and invokeAny()

Goal: Run multiple callables together.
Requirements:

Submit 3 callables with different delays.

Use invokeAll() to get all results.

Use invokeAny() to get fastest result.

ðŸ§© Q19 â€“ Executor Shutdown

Goal: Understand shutdown sequence.
Requirements:

Submit few tasks.

Call shutdown() then shutdownNow().

Observe which tasks complete.

Demonstrate awaitTermination().

ðŸ§© Q20 â€“ ScheduledExecutorService

Goal: Schedule recurring tasks.
Requirements:

Print timestamp every 3 seconds.

Stop after 15 seconds.

ðŸ§© Q21 â€“ Custom ThreadPoolExecutor

Goal: Fine-tune pool parameters.
Requirements:

Create ThreadPoolExecutor manually:

core=2, max=4, queue=2.

Submit 10 tasks.

Handle rejections with RejectedExecutionHandler.