# Latency:    The time to complete any task measured in time units.
# Throughput: The amount of tasks completed in a given period, measured in tasks/ time unit.

# #Thread = #Cores   is optimal

# Virtual core: A physical core may have duplicated hardware which allows it to run multiple threads in parallel using virtual cores.

# Heap stores: Objects, class members, static variables which belongs to the process managed by GC
# Stack stores: Local primitive types, local references

# Inherent cost of parallelization and aggregation:
  Breaking task into multiple tasks + Thread creation, passing tasks to threads + Time between thread.start() & thread getting scheduled
  + Time until last thread finishes and signals + Time until the aggregating thread runs + Aggregation of sub-results into single artifact